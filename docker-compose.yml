version: '3.7'
services:
  zookeeper_xb:
    container_name: zookeeper_xb
    image: confluentinc/cp-zookeeper:7.6.0
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka_xb:
    container_name: kafka_xb
    image: confluentinc/cp-kafka:7.6.0
    restart: unless-stopped
    environment:
      KAFKA_LOG_RETENTION_MINUTES: 1440 # save data for 24hrs
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_xb:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_xb:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      # This is required when you are running with a single-node cluster
      # specify the replication factor for the __consumer_offsets topic
      # __consumer_offsets topic preserves consumer offsets when consumer group commits offsets to Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # when applications attempt to produce, consume, or fetch metadata for a non-existent topic,
      # Kafka will automatically create the topic with the default replication factor and number of partitions
      # which is true by default
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper_xb

  mongo_db:
    image: mongo:4.4.10
    ports:
      - "27017:27017"
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: xrust_beze
    volumes:
      - ./dev/mongo:/scripts
      - mongo_data:/data/db

  app:
    image: xrust_beze:latest
    container_name: main
    env_file:
      - .env
    tty: true
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - .:/app
    depends_on:
      - mongo_db
      - kafka_xb
      - zookeeper_xb

  user_service:
    image: xrust_beze_user:latest
    container_name: user_service
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo_db:27017/xrust_beze?authSource=admin
      - MONGO_DB_NAME=xrust_beze
      - HTTP_PORT=8080
      - GRPC_PORT=50051
    ports:
      - "8081:8080"  # HTTP порт (изменен, чтобы не конфликтовать с другими сервисами)
      - "50051:50051"  # gRPC порт
    restart: always
    depends_on:
      - mongo_db

  ml_summarizer:
    build: ml_summarizer
    ports:
      - "8091:8091"
    environment:
      - API_KEY=${API_KEY}

volumes:
  mongo_data:
  kafka_data:
