// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/study_material/study_material.proto

package study_material

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StudyMaterial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Author        *User                  `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Created       int64                  `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated       int64                  `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudyMaterial) Reset() {
	*x = StudyMaterial{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyMaterial) ProtoMessage() {}

func (x *StudyMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyMaterial.ProtoReflect.Descriptor instead.
func (*StudyMaterial) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{0}
}

func (x *StudyMaterial) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StudyMaterial) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudyMaterial) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StudyMaterial) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StudyMaterial) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *StudyMaterial) GetAuthor() *User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *StudyMaterial) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *StudyMaterial) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Avatar        string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type GetStudyMaterialByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudyMaterialByIDRequest) Reset() {
	*x = GetStudyMaterialByIDRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudyMaterialByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyMaterialByIDRequest) ProtoMessage() {}

func (x *GetStudyMaterialByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyMaterialByIDRequest.ProtoReflect.Descriptor instead.
func (*GetStudyMaterialByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{2}
}

func (x *GetStudyMaterialByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetStudyMaterialsByTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudyMaterialsByTagsRequest) Reset() {
	*x = GetStudyMaterialsByTagsRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudyMaterialsByTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyMaterialsByTagsRequest) ProtoMessage() {}

func (x *GetStudyMaterialsByTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyMaterialsByTagsRequest.ProtoReflect.Descriptor instead.
func (*GetStudyMaterialsByTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{3}
}

func (x *GetStudyMaterialsByTagsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetStudyMaterialsByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudyMaterialsByNameRequest) Reset() {
	*x = GetStudyMaterialsByNameRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudyMaterialsByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyMaterialsByNameRequest) ProtoMessage() {}

func (x *GetStudyMaterialsByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyMaterialsByNameRequest.ProtoReflect.Descriptor instead.
func (*GetStudyMaterialsByNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudyMaterialsByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetStudyMaterialsByAuthorIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthorId      string                 `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudyMaterialsByAuthorIDRequest) Reset() {
	*x = GetStudyMaterialsByAuthorIDRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudyMaterialsByAuthorIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyMaterialsByAuthorIDRequest) ProtoMessage() {}

func (x *GetStudyMaterialsByAuthorIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyMaterialsByAuthorIDRequest.ProtoReflect.Descriptor instead.
func (*GetStudyMaterialsByAuthorIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{5}
}

func (x *GetStudyMaterialsByAuthorIDRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type CreateStudyMaterialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorId      string                 `protobuf:"bytes,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStudyMaterialRequest) Reset() {
	*x = CreateStudyMaterialRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudyMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudyMaterialRequest) ProtoMessage() {}

func (x *CreateStudyMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudyMaterialRequest.ProtoReflect.Descriptor instead.
func (*CreateStudyMaterialRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStudyMaterialRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStudyMaterialRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CreateStudyMaterialRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateStudyMaterialRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type StudyMaterialResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudyMaterial *StudyMaterial         `protobuf:"bytes,1,opt,name=study_material,json=studyMaterial,proto3" json:"study_material,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudyMaterialResponse) Reset() {
	*x = StudyMaterialResponse{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyMaterialResponse) ProtoMessage() {}

func (x *StudyMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyMaterialResponse.ProtoReflect.Descriptor instead.
func (*StudyMaterialResponse) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{7}
}

func (x *StudyMaterialResponse) GetStudyMaterial() *StudyMaterial {
	if x != nil {
		return x.StudyMaterial
	}
	return nil
}

type StudyMaterialListResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StudyMaterials []*StudyMaterial       `protobuf:"bytes,1,rep,name=study_materials,json=studyMaterials,proto3" json:"study_materials,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StudyMaterialListResponse) Reset() {
	*x = StudyMaterialListResponse{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyMaterialListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyMaterialListResponse) ProtoMessage() {}

func (x *StudyMaterialListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyMaterialListResponse.ProtoReflect.Descriptor instead.
func (*StudyMaterialListResponse) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{8}
}

func (x *StudyMaterialListResponse) GetStudyMaterials() []*StudyMaterial {
	if x != nil {
		return x.StudyMaterials
	}
	return nil
}

type DeleteStudyMaterialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId      string                 `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudyMaterialRequest) Reset() {
	*x = DeleteStudyMaterialRequest{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudyMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudyMaterialRequest) ProtoMessage() {}

func (x *DeleteStudyMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudyMaterialRequest.ProtoReflect.Descriptor instead.
func (*DeleteStudyMaterialRequest) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteStudyMaterialRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteStudyMaterialRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type DeleteStudyMaterialResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudyMaterialResponse) Reset() {
	*x = DeleteStudyMaterialResponse{}
	mi := &file_proto_study_material_study_material_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudyMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudyMaterialResponse) ProtoMessage() {}

func (x *DeleteStudyMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_study_material_study_material_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudyMaterialResponse.ProtoReflect.Descriptor instead.
func (*DeleteStudyMaterialResponse) Descriptor() ([]byte, []int) {
	return file_proto_study_material_study_material_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteStudyMaterialResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_study_material_study_material_proto protoreflect.FileDescriptor

var file_proto_study_material_study_material_proto_rawDesc = string([]byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xe2, 0x01, 0x0a, 0x0d,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x60, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0x7d, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x5d, 0x0a, 0x15, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x63,
	0x0a, 0x19, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x49, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x37,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xc6, 0x05, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x16, 0x5a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_study_material_study_material_proto_rawDescOnce sync.Once
	file_proto_study_material_study_material_proto_rawDescData []byte
)

func file_proto_study_material_study_material_proto_rawDescGZIP() []byte {
	file_proto_study_material_study_material_proto_rawDescOnce.Do(func() {
		file_proto_study_material_study_material_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_study_material_study_material_proto_rawDesc), len(file_proto_study_material_study_material_proto_rawDesc)))
	})
	return file_proto_study_material_study_material_proto_rawDescData
}

var file_proto_study_material_study_material_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_study_material_study_material_proto_goTypes = []any{
	(*StudyMaterial)(nil),                      // 0: study_material.StudyMaterial
	(*User)(nil),                               // 1: study_material.User
	(*GetStudyMaterialByIDRequest)(nil),        // 2: study_material.GetStudyMaterialByIDRequest
	(*GetStudyMaterialsByTagsRequest)(nil),     // 3: study_material.GetStudyMaterialsByTagsRequest
	(*GetStudyMaterialsByNameRequest)(nil),     // 4: study_material.GetStudyMaterialsByNameRequest
	(*GetStudyMaterialsByAuthorIDRequest)(nil), // 5: study_material.GetStudyMaterialsByAuthorIDRequest
	(*CreateStudyMaterialRequest)(nil),         // 6: study_material.CreateStudyMaterialRequest
	(*StudyMaterialResponse)(nil),              // 7: study_material.StudyMaterialResponse
	(*StudyMaterialListResponse)(nil),          // 8: study_material.StudyMaterialListResponse
	(*DeleteStudyMaterialRequest)(nil),         // 9: study_material.DeleteStudyMaterialRequest
	(*DeleteStudyMaterialResponse)(nil),        // 10: study_material.DeleteStudyMaterialResponse
}
var file_proto_study_material_study_material_proto_depIdxs = []int32{
	1,  // 0: study_material.StudyMaterial.author:type_name -> study_material.User
	0,  // 1: study_material.StudyMaterialResponse.study_material:type_name -> study_material.StudyMaterial
	0,  // 2: study_material.StudyMaterialListResponse.study_materials:type_name -> study_material.StudyMaterial
	2,  // 3: study_material.StudyMaterialService.GetStudyMaterialByID:input_type -> study_material.GetStudyMaterialByIDRequest
	3,  // 4: study_material.StudyMaterialService.GetStudyMaterialsByTags:input_type -> study_material.GetStudyMaterialsByTagsRequest
	4,  // 5: study_material.StudyMaterialService.GetStudyMaterialsByName:input_type -> study_material.GetStudyMaterialsByNameRequest
	5,  // 6: study_material.StudyMaterialService.GetStudyMaterialsByAuthorID:input_type -> study_material.GetStudyMaterialsByAuthorIDRequest
	6,  // 7: study_material.StudyMaterialService.CreateStudyMaterial:input_type -> study_material.CreateStudyMaterialRequest
	9,  // 8: study_material.StudyMaterialService.DeleteStudyMaterial:input_type -> study_material.DeleteStudyMaterialRequest
	7,  // 9: study_material.StudyMaterialService.GetStudyMaterialByID:output_type -> study_material.StudyMaterialResponse
	8,  // 10: study_material.StudyMaterialService.GetStudyMaterialsByTags:output_type -> study_material.StudyMaterialListResponse
	8,  // 11: study_material.StudyMaterialService.GetStudyMaterialsByName:output_type -> study_material.StudyMaterialListResponse
	8,  // 12: study_material.StudyMaterialService.GetStudyMaterialsByAuthorID:output_type -> study_material.StudyMaterialListResponse
	7,  // 13: study_material.StudyMaterialService.CreateStudyMaterial:output_type -> study_material.StudyMaterialResponse
	10, // 14: study_material.StudyMaterialService.DeleteStudyMaterial:output_type -> study_material.DeleteStudyMaterialResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_study_material_study_material_proto_init() }
func file_proto_study_material_study_material_proto_init() {
	if File_proto_study_material_study_material_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_study_material_study_material_proto_rawDesc), len(file_proto_study_material_study_material_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_study_material_study_material_proto_goTypes,
		DependencyIndexes: file_proto_study_material_study_material_proto_depIdxs,
		MessageInfos:      file_proto_study_material_study_material_proto_msgTypes,
	}.Build()
	File_proto_study_material_study_material_proto = out.File
	file_proto_study_material_study_material_proto_goTypes = nil
	file_proto_study_material_study_material_proto_depIdxs = nil
}
